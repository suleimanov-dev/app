version: "3.3"

services:
  db:
    image: postgres:14.1
    volumes:
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=main
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"

  backend:
    restart: always
    build:
      context: ./backend
    command: sh -c "python src/manage.py collectstatic --noinput && python src/manage.py migrate && gunicorn --chdir ./src config.wsgi --bind 0.0.0.0:8000"
    volumes:
      - backend_uploads:/backend/src/uploads
      - backend_static:/backend/src/static
    environment:
      - MODE=production
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_CORS_ALLOWED_ORIGINS=${DJANGO_CORS_ALLOWED_ORIGINS}
      - DB_NAME=main
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=db
    ports:
      - "8000:8000"
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
    command: sh -c "env > .env && yarn build"
    volumes:
      - frontend_build:/frontend/dist
    environment:
      - API_URL=${API_URL}

  app:
    image: nginx:1.21.6
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./app/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - ./app/certbot/www:/var/www/certbot/:ro
      - ./app/certbot/conf/:/etc/nginx/ssl/:ro
      - frontend_build:/var/www/frontend
      - backend_static:/var/www/backend/static
      - backend_uploads:/var/www/backend/uploads
    depends_on:
      - backend
      - frontend

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./app/certbot/www:/var/www/certbot/:rw
      - ./app/certbot/conf/:/etc/letsencrypt/:rw

volumes:
  db:
  backend_uploads:
  backend_static:
  frontend_build:
